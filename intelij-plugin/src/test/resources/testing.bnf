/*
 *
 *   Copyright (c) 2021 PANTHEON.tech, s.r.o. All rights reserved.
 *
 *   This program and the accompanying materials are made available under the
 *   terms of the Eclipse Public License v1.0 which accompanies this distribution,
 *   and is available at http://www.eclipse.org/legal/epl-v10.html
 *
 */
 {
tokens = [
      WSP="regexp:\s"
      LF = "regexp:\n"
      CRLF = "regexp:\r\n"
      LEFT_BRACE='{'
      RIGHT_BRACE='}'
      SLASH='/'
      COLON=':'
      SEMICOLON=';'
      PLUS='+'
      LINE_COMMENT="regexp://.*"
      LINE_COMMENT="regexp://.*"
      BLOCK_COMMENT='regexp:/\*([^*]|\*+[^*/])*(\*+/)?'
      DOUBLE_QUOTED_STRING="regexp:\"([^\"])*\"?"
      SINGLE_QUOTED_STRING="regexp:'([^\'\r\n]|\\[^\r\n])*'?"
      IDENTIFIER="regexp:[a-zA-Z_]([a-zA-Z0-9_\-\\.])*"
      UNQUOTED_STRING="regexp:[\w\.]+"
      DATE_ARG="regexp:[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}"

      // An identifier MUST NOT start with (('X'|'x') ('M'|'m') ('L'|'l'))
      // IDENTIFIER="regexp:[a-kn-wyzA-KN-WYZ_]([a-zA-Z0-9_\-\.])*"
      LEAFREF_TYPE = 'leafref'
      ANYXML_KEYWORD          = 'anyxml'
      ARGUMENT_KEYWORD        = 'argument'
      AUGMENT_KEYWORD         = 'augment'
      BASE_KEYWORD            = 'base'
      BELONGS_TO_KEYWORD      = 'belongs-to'
      BIT_KEYWORD             = 'bit'
      CASE_KEYWORD            = 'case'
      CHOICE_KEYWORD          = 'choice'
      CONFIG_KEYWORD          = 'config'
      CONTACT_KEYWORD         = 'contact'
      CONTAINER_KEYWORD       = 'container'
      DEFAULT_KEYWORD         = 'default'
      DESCRIPTION_KEYWORD     = 'description'
      ENUM_KEYWORD            = 'enum'
      ERROR_APP_TAG_KEYWORD   = 'error-app-tag'
      ERROR_MESSAGE_KEYWORD   = 'error-message'
      EXTENSION_KEYWORD       = 'extension'
      DEVIATION_KEYWORD       = 'deviation'
      DEVIATE_KEYWORD         = 'deviate'
      FEATURE_KEYWORD         = 'feature'
      GROUPING_KEYWORD        = 'grouping'
      IDENTITY_KEYWORD        = 'identity'
      IF_FEATURE_KEYWORD      = 'if-feature'
      IMPORT_KEYWORD          = 'import'
      INCLUDE_KEYWORD         = 'include'
      INPUT_KEYWORD           = 'input'
      KEY_KEYWORD             = 'key'
      LEAF_KEYWORD            = 'leaf'
      LEAF_LIST_KEYWORD       = 'leaf-list'
      LENGTH_KEYWORD          = 'length'
      LIST_KEYWORD            = 'list'
      MANDATORY_KEYWORD       = 'mandatory'
      MAX_ELEMENTS_KEYWORD    = 'max-elements'
      MIN_ELEMENTS_KEYWORD    = 'min-elements'
      MODULE_KEYWORD          = 'module'
      MUST_KEYWORD             = 'must'
      NAMESPACE_KEYWORD        = 'namespace'
      NOTIFICATION_KEYWORD     = 'notification'
      ORDERED_BY_KEYWORD       = 'ordered-by'
      ORGANIZATION_KEYWORD     = 'organization'
      OUTPUT_KEYWORD           = 'output'
      PATH_KEYWORD             = 'path'
      PATTERN_KEYWORD          = 'pattern'
      POSITION_KEYWORD         = 'position'
      PREFIX_KEYWORD           = 'prefix'
      PRESENCE_KEYWORD         = 'presence'
      RANGE_KEYWORD            = 'range'
      REFERENCE_KEYWORD        = 'reference'
      REFINE_KEYWORD           = 'refine'
      REQUIRE_INSTANCE_KEYWORD = 'require-instance'
      REVISION_KEYWORD         = 'revision'
      REVISION_DATE_KEYWORD    = 'revision-date'
      RPC_KEYWORD              = 'rpc'
      STATUS_KEYWORD           = 'status'
      SUBMODULE_KEYWORD        = 'submodule'
      UNIQUE_KEYWORD           = 'unique'
      UNITS_KEYWORD            = 'units'
      USES_KEYWORD             = 'uses'
      VALUE_KEYWORD            = 'value'
      WHEN_KEYWORD             = 'when'
      YANG_VERSION_KEYWORD     = 'yang-version'
      YIN_ELEMENT_KEYWORD      = 'yin-element'
      ADD_KEYWORD              = 'add'
      CURRENT_KEYWORD          = 'current'
      DELETE_KEYWORD           = 'delete'
      DEPRECATED_KEYWORD       = 'deprecated'
      FALSE_KEYWORD            = 'false'
      MAX_KEYWORD              = 'max'
      MIN_KEYWORD              = 'min'
      NOT_SUPPORTED_KEYWORD    = 'not-supported'
      OBSOLETE_KEYWORD         = 'obsolete'
      REPLACE_KEYWORD          = 'replace'
      SYSTEM_KEYWORD           = 'system'
      TRUE_KEYWORD             = 'true'
      UNBOUNDED_KEYWORD        = 'unbounded'
      USER_KEYWORD             = 'user'
  ]

  extends(".*stmt|unknown_statement.*")=Statement
  generateTokenAccessors=true
}
type-stmt ::= type sep decimal64 sep
 ( SEMICOLON |
 (
     LEFT_BRACE sep
     type-body-stmts
     RIGHT_BRACE
 )
 )
 {
    implements="com.intellij.lang.yang.reference.YangGeneratedReferenceType"
    extends="com.intellij.lang.yang.reference.YangGeneratedReferenceTypeImpl"
 }

 type-body-stmts ::= decimal64-specification
 decimal64-specification ::= fraction-digits-stmt stmtsep
 prefix ::= identifier
 identifier-ref-arg-str ::= identifier-ref-arg | ( DOUBLE_QUOTE identifier-ref-arg DOUBLE_QUOTE )
 identifier-ref-arg  ::= (prefix COLON)? identifier
 identifier ::= ( ALPHA | UNDERSCORE | identifier-literal ) (ALPHA | DIGIT | UNDERSCORE | DASH | DOT | identifier-literal)*


fraction-digits-stmt ::= fraction-digits sep
 fraction-digits-arg-str ";"

fraction-digits-arg-str ::= fraction-digits-arg  /* a string that matches the rule
 fraction-digits-arg > */
fraction-digits-arg ::= ( "1" ( ZERO | "1" | "2" | "3" | "4" |
 "5" | "6" | "7" | "8" ) ? )
 | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

sep ::=  (WSP | line-break)+




